# -*- coding: utf-8 -*-
"""TransArt.app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bZTT6AbIZesIxi10bYKm1s4mJL-qa-TO
"""

import os
import gradio as gr
from google.cloud import translate_v2 as translate
import torch
from diffusers import StableDiffusionPipeline
from transformers import pipeline
from PIL import Image

# Set up Google Translate API credentials
json_key_file = "credentials.json"
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = json_key_file

# Initialize Google Translate client
translate_client = translate.Client()

# Initialize Stable Diffusion pipeline for image generation
pipe = StableDiffusionPipeline.from_pretrained(
    "runwayml/stable-diffusion-v1-5",
    torch_dtype=torch.float16
).to("cuda")

# Initialize text generation pipeline with GPT-2
text_generator = pipeline("text-generation", model="gpt2", device=0)

def process_text(tamil_text):
    """Process Tamil text: translate, generate image, and create creative text."""

    # Step 1: Translate Tamil to English
    translated_text = translate_client.translate(tamil_text, source_language='ta', target_language='en')['translatedText']

    # Step 2: Generate Image from Translated Text
    image = pipe(translated_text).images[0]

    # Step 3: Generate Creative Text from Translated Text
    creative_text = text_generator(
        translated_text,
        max_length=200,
        num_return_sequences=1,
        temperature=0.9,
        top_p=0.85,
        do_sample=True,
        repetition_penalty=1.1,
        truncation=True
    )[0]['generated_text']

    return translated_text, image, creative_text

#CSS for a more visually appealing interface
css = """
body {background-color: #f4f4f9; color: #333333; font-family: Arial, sans-serif;}
#input_text {font-size: 1.2em; border: 1px solid #bbb; padding: 12px; border-radius: 8px;}
.gr-image {border-radius: 8px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);}
.gr-button {background-color: #4CAF50; color: white; font-weight: bold; padding: 12px 24px; border-radius: 8px; cursor: pointer;}
.gr-button:hover {background-color: #45a049;}
"""

#Gradio app interface with enhanced style
with gr.Blocks(css=css) as demo:
    gr.Markdown(
        """
        #  TransArt: A Multimodal Application for Vernacular Language Translation and Image Synthesis

        This app translates Tamil text into English, generates a creative image based on the translation, and provides a unique creative text.
        """,
        elem_id="app-title"
    )

    with gr.Row():
        input_text = gr.Textbox(label="üìù Enter Tamil Text", placeholder="Type Tamil text here...", lines=2, elem_id="input_text")

    with gr.Row():
        output_translation = gr.Textbox(label="üìú Translated Text (English)", placeholder="Translation will appear here", elem_id="output_translation")
        output_image = gr.Image(label="üñºÔ∏è Generated Image", elem_id="output_image")
        output_creative_text = gr.Textbox(label="‚úçÔ∏è Creative Text", placeholder="Creative text will appear here", elem_id="output_creative_text")

    submit_btn = gr.Button("‚ú® Generate", elem_id="generate-btn")
    submit_btn.click(
        process_text,
        inputs=input_text,
        outputs=[output_translation, output_image, output_creative_text]
    )

# Launch Gradio app
demo.launch()